


1. Добавить логгирование
2. Продумать Инструкцию для пользователя


@GetMapping("/download/{id}")
public ResponseEntity<byte[]> downloadDocument(@PathVariable String id) {
    DocumentClass document = documentServiceClass.findDocumentById(id);
    if (document != null) {
        HttpHeaders headers = new HttpHeaders();
        String docType = document.getContentType(); // Получаем тип контента из объекта документа
        headers.setContentType(MediaType.parseMediaType(docType)); // Устанавливаем тип контента
        headers.setContentDisposition(ContentDisposition.attachment().filename(document.getName() + getFileExtension(docType)).build());
        headers.setContentLength(document.getContent().length);

        return new ResponseEntity<>(document.getContent(), headers, HttpStatus.OK);
    }
    return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
}

// Метод для получения расширения файла на основе типа контента
private String getFileExtension(String contentType) {
    switch (contentType) {
        case "application/pdf":
            return ".pdf";
        case "image/jpeg":
            return ".jpg";
        case "image/png":
            return ".png";
        case "application/msword":
            return ".doc";
        case "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
            return ".docx";
        case "application/vnd.ms-excel":
            return ".xls";
        case "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":
            return ".xlsx";
        case "text/plain":
            return ".txt";
        // Добавьте другие необходимые случаи
        default:
            return ""; // Если расширение не найдено, возвращаем пустую строку
    }
}
